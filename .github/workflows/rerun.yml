name: Test Rerun
on:
  issue_comment:
    types: [created]

env:
  RERUN_COMMENT_TEXT: test rerun
  
jobs:
  verify-jobs:
    name: Test reruns
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Get jobs to rerun
        id: validate-command-params
        if:
          ${{
            github.event_name == 'issue_comment' && github.event.issue.pull_request &&
            startsWith(github.event.comment.body, env.RERUN_COMMENT_TEXT)
          }}
        env:
          COMMENT_BODY: ${{ github.event.comment.body }}
        uses: actions/github-script@v5
        with:
          result-encoding: string
          script: |
            const SUPPORTED_JOBS = [
                'something'
              ]
              
            const command = process.env.RERUN_COMMENT_TEXT
            const comment = process.env.COMMENT_BODY
            
            const commandParams = comment.replace(command, "").trim().split(" ");
            const paramsValidationObject = commandParams
              .reduce(
                (prev, param) =>
                  SUPPORTED_JOBS.includes(param)
                    ? { ...prev, ...prev.valid.push(param) }
                    : { ...prev, ...prev.inValid.push(param) },
                { valid: [], inValid: [] }
              );
              
            core.setOutput('valid', paramsValidationObject.valid.join(", "));
            core.setOutput('invalid', paramsValidationObject.inValid.join(", "));
            
      - name: Run tests
        env:
          JOBS_TO_RERUN: ${{ steps.validate-command-params.outputs.valid }}
        run: |
          IFS=', ' read -a arr <<< $JOBS_TO_RERUN
          for i in "${arr[@]}"
          do
            echo "$i"
          done

      - name: Notify on reruns 
        env:
          JOBS_TO_RERUN: ${{ steps.validate-command-params.outputs.valid }}
          INVALID_PARAMS: ${{ steps.validate-command-params.outputs.invalid }}
        uses: actions/github-script@v5
        with:
          result-encoding: string
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const jobsToRerun = process.env.JOBS_TO_RERUN
            const invalidParams = process.env.INVALID_PARAMS
            
            const rerunningMessage = `Rerunning jobs: ${jobsToRerun}`
            const invalidParamsMessage = `Something feels off about: ${invalidParams}. Maybe check the spelling?`
            
            const messageBody = `${jobsToRerun && rerunningMessage} ${invalidParams && invalidParamsMessage}`
            
            await github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: context.issue.number,
                    body: messageBody,
                  });


