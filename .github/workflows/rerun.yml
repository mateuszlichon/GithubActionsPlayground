name: Test Rerun
on:
  issue_comment:
    types: [created]

env:
  RERUN_COMMENT_TEXT: test rerun
  
jobs:
  verify-jobs:
    name: Test reruns
    outputs:
      jobs-to-rerun: ${{ steps.jobs-to-rerun.outputs.result }}
      jobs-to-rerun-array: '(something somethingElse somethingOther)'
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Get jobs to rerun
        id: jobs-to-rerun
        if:
          ${{
            github.event_name == 'issue_comment' && github.event.issue.pull_request &&
            startsWith(github.event.comment.body, env.RERUN_COMMENT_TEXT)
          }}
        env:
          COMMENT_BODY: ${{ github.event.comment.body }}
        uses: actions/github-script@v5
        with:
          result-encoding: string
          script: |
            const command = process.env.RERUN_COMMENT_TEXT
            const comment = process.env.COMMENT_BODY
            const match = comment.match(new RegExp(command + "(.*)"));
            const jobsToRerun = match && match[1].trim().split(" ");
            console.log(jobsToRerun);
            return JSON.stringify(jobsToRerun)
      - name: Notify on reruns 
        env:
          JOBS_TO_RERUN: ${{ steps.jobs-to-rerun.outputs.result }}
        uses: actions/github-script@v5
        with:
          result-encoding: string
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const jobsToRerunArray = JSON.parse(process.env.JOBS_TO_RERUN)
            const commentMessage = `Rerunning jobs: ${jobsToRerunArray.join(', ')}`
            await github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: context.issue.number,
                    body: commentMessage,
                  });
      - name: Run tests
        env:
          JOBS_TO_RERUN: '(something somethingElse somethingOther)'
        run: |
           for i in "${JOBS_TO_RERUN[@]}"
             do
              echo "$i"
            done


