name: Wait for CI

on:
  workflow_run:
    workflows: 
      - CI
    types:
      - completed

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Awaits
        run: |
          echo Hooray,
          echo I waited.
          
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Runs script
        env: 
          GIT_SHA: ${{ github.event.workflow_run.id }}
#           GIT_BRANCH: ${{ github.event.workflow_run.head_branch }}
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            console.log('tra la la')
            const gitBranch = '${{ github.event.workflow_run.head_branch }}'
            console.log('gitbranch', gitBranch)
            
            async function getWorkflowStatus(workflow) {
              const {data} = await github.actions.listWorkflowRuns({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: workflow,
                branch: gitBranch,
              })
              
              console.log('data', data)

              const runsOnSameSha = data.workflow_runs.filter((run) => run.head_sha === '${{ env.GIT_SHA }}')
              
              const sortedRuns = runsOnSameSha.sort((a, b) => b.run_number - a.run_number)

              console.log('sortedRuns[0]', sortedRuns[0])
              
              return sortedRuns[0].conclusion
            }
            
            const ciStatus = await getWorkflowStatus('ci.yml')
            
            console.log('ciStatus', ciStatus)
            
            
